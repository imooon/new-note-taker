User Story

AS A small business owner

I WANT to be able to write and save notes
SO THAT I can organize my thoughts and keep track of tasks I need to complete

Acceptance Criteria

GIVEN a note-taking application

WHEN I open the Note Taker
THEN I am presented with a landing page with a link to a notes page

WHEN I click on the link to the notes page
THEN I am presented with a page with existing notes listed in the left-hand column, plus empty fields to enter a new note title and the note’s text in the right-hand column

WHEN I enter a new note title and the note’s text
THEN a "Save Note" button and a "Clear Form" button appear in the navigation at the top of the page

WHEN I click on the Save button
THEN the new note I have entered is saved and appears in the left-hand column with the other existing notes and the buttons in the navigation disappear

WHEN I click on an existing note in the list in the left-hand column
THEN that note appears in the right-hand column and a "New Note" button appears in the navigation

WHEN I click on the "New Note" button in the navigation at the top of the page
THEN I am presented with empty fields to enter a new note title and the note’s text in the right-hand column and the button disappears
Mock-Up

----------------------------------

1. Have a landing page.

2. Lef-hand column will have existing notes and new notes on the right side.

3. When creating a new note, the options 'Save Note' and 'Clear Form' should appear as well.

4. On saving a new note, it gets added to the left column.

5. A 'New Note' button should also appear on the right side whilst clicking on an existing note.

6. The 'New Note' should be functional.

----------------------------------

1. 'db.json' file on the back end that will be used to store & retrieve notes using the 'fs' module.

2. GET /notes should return the notes.html file.

3. GET * should return the index.html file.

4. 'GET /api/notes' should read the db.json file and return all saved notes as JSON.

5. 'POST /api/notes' should receive a new note to save on the request body, add it to the db.json file, and then return the new note to the client. You'll need to find a way to give each note a unique id when it's saved (look into npm packages that could do this for you).

6. 'DELETE /api/notes/:id' should receive a query parameter containing the id of a note to delete. In order to delete a note, you'll need to read all notes from the db.json file, remove the note with the given id property, and then rewrite the notes to the db.json file.

----------------------------------

npm install uuid@3.3.3

npm install

npm install express

npm install -g heroku

